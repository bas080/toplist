{"mappings":"ACAA,MAAM,EAAgB,aAChB,EAAS,CACb,IACA,cACA,YACA,sBAED,CAED,KAAK,gBAAgB,CAAC,UAAW,AAAC,IAChC,EAAa,SAAS,CACpB,OAAO,IAAI,CAAC,GAAe,IAAI,CAAC,AAAC,IAC/B,EAAM,MAAM,CAAC,EACf,GAEJ,GAEA,KAAK,gBAAgB,CAAC,QAAS,AAAC,IAC9B,EAAW,WAAW,CACpB,OAAO,KAAK,CAAC,EAAW,OAAO,EAAE,IAAI,CAAC,AAAC,GAC9B,GAAO,MAAM,EAAW,OAAO,GAG5C,GAGA,KAAK,gBAAgB,CAAC,UAAW,AAAC,IAC5B,EAAM,IAAI,EAAI,AAAsB,eAAtB,EAAM,IAAI,CAAC,MAAM,EACjC,OAAO,MAAM,CAAC,GAAe,IAAI,CAAC,KAChC,QAAQ,GAAG,CAAC,CAAC,EAAE,EAAc,cAAc,CAAC,CAC9C,EAEJ","sources":["<anon>","serviceWorker.js"],"sourcesContent":["const staticTopList = \"toplist-v1\";\nconst assets = [\n    \"/\",\n    \"/index.html\",\n    \"/toplist/\",\n    \"/toplist/index.html\"\n];\nself.addEventListener(\"install\", (installEvent)=>{\n    installEvent.waitUntil(caches.open(staticTopList).then((cache)=>{\n        cache.addAll(assets);\n    }));\n});\nself.addEventListener(\"fetch\", (fetchEvent)=>{\n    fetchEvent.respondWith(caches.match(fetchEvent.request).then((res)=>{\n        return res || fetch(fetchEvent.request);\n    }));\n});\n// Listen for messages from clients\nself.addEventListener(\"message\", (event)=>{\n    if (event.data && event.data.action === \"clearCache\") caches.delete(staticTopList).then(()=>{\n        console.log(`${staticTopList} cache cleared`);\n    });\n});\n\n//# sourceMappingURL=serviceWorker.js.map\n","const staticTopList = \"toplist-v1\";\nconst assets = [\n  \"/\",\n  \"/index.html\",\n  \"/toplist/\",\n  \"/toplist/index.html\",\n  // Add more assets as needed\n];\n\nself.addEventListener(\"install\", (installEvent) => {\n  installEvent.waitUntil(\n    caches.open(staticTopList).then((cache) => {\n      cache.addAll(assets);\n    }),\n  );\n});\n\nself.addEventListener(\"fetch\", (fetchEvent) => {\n  fetchEvent.respondWith(\n    caches.match(fetchEvent.request).then((res) => {\n      return res || fetch(fetchEvent.request);\n    }),\n  );\n});\n\n// Listen for messages from clients\nself.addEventListener(\"message\", (event) => {\n  if (event.data && event.data.action === \"clearCache\") {\n    caches.delete(staticTopList).then(() => {\n      console.log(`${staticTopList} cache cleared`);\n    });\n  }\n});\n"],"names":["staticTopList","assets","self","addEventListener","installEvent","waitUntil","caches","open","then","cache","addAll","fetchEvent","respondWith","match","request","res","fetch","event","data","action","delete","console","log"],"version":3,"file":"serviceWorker.js.map"}